#!groovy

@Library('jenkinslibrary@master') _

//func from sharelibrary
def build = new org.devops.build()
def deploy = new org.devops.deploy()
def tools = new org.devops.tools()
def sonar = new org.devops.sonarqube()

//env variables
String buildType = "$env.buildType"
String buildShell = "$env.buildShell"
String deployHosts = "$env.deployHosts"

String srcUrl = "$env.srcUrl"
String branchName = "$env.branchName"

pipeline{
  agent { node { label "master"}}

  stages{
    stage("CheckOut"){
      steps{
        script{
          tools.PrintMes("获取代码","green")
          checkout scmGit(branches: [[name: "$branchName"]], extensions: [], userRemoteConfigs: [[credentialsId: 'GitlabRoger', url: "$srcUrl"]])
        }
      }      
    }

  stage("Build"){
      steps{
        script{
          mvnHome = tool "m2"       
          println("buildShell=$buildShell")
          println("buildType=$buildType")
/*          bat "$mvnHome\\bin\\mvn $buildShell" */
            tools.PrintMes("构建打包","green")
            build.Build(buildType,buildShell)          
        }
      }
    }
  stage("QA Scan"){
    steps{
      script{
        tools.PrintMes("代码扫描","green")
        tools.PrintMes("${JOB_NAME}","green")    
//        String sonarServer = "http://localhost:9001"
        
        sonar.SonarScan("test","${JOB_NAME}","${JOB_NAME}","src","$branchName")
      }
    }
  }
  }
}
